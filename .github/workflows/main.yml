name: CI
on:
  push:
    branches: [main]
  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        qt-version: [5.12.1]
        os: [linux]
        dist: [xenial]
        cc: [gcc, clang]
        cxx: [g++, clang++]
        CFLAGS: ["-Os -march=native", "-Oz"]
        LDFLAGS: ["-Wl,--no-undefined -lm", "-Wl,--no-undefined -lm"]
        MAKEFLAGS: ["", "-s"]
        # Add other configurations as needed

    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}

    - name: Install apt packages  
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev valgrind doxygen

    - name: Configure
      run: |
        eval "CC=${{ matrix.cc }} && CXX=${{ matrix.cxx }}"
        make -f Makefile.configure configure

    - name: Build
      env:
        CFLAGS: "${{ matrix.CFLAGS }}"
      run: |
        make lib/libtinycbor.a

    - name: Check size
      run: |
        size lib/libtinycbor.a

    - name: Clean
      run: |
        make -s clean

    - name: Build debug
      env:
        CFLAGS: "-O0 -g"
      run: |
        make lib/libtinycbor.a

    - name: Tests
      env:
        LDFLAGS: "${{ matrix.LDFLAGS }}"
        # Add any other required environment variables
      run: |
        grep -q freestanding-pass .config || make tests/Makefile
        grep -q freestanding-pass .config || (cd tests && make check)

    - name: Clean
      run: |
        make -s clean
        
  docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2

    - name: Build docs
      run: ./scripts/update-docs.sh
